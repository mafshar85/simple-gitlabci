workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

variables:
  $CI_REGISTRY_IMAGE: mafshar85/nodejs-cicd

image: node:20-alpine

run_unit_tests:
  tags:
    - kvm
    - docker
  stage: test
  # only:
  #   - master
  except:
    - master
  before_script:
    - cd app
    - npm install
  script:
    - npm test
  artifacts:
    when: always
    paths:
      - app/junit.xml
    reports:
      junit: app/junit.xml
  #allow_failure: "true"  

build_image:
  tags:
    - shell-exec
  stage: build
  except:
    - master
  #image: node:20-alpine
  script:
    - docker build -t $CI_REGISTRY_IMAGE:v1.0 .

push_image:
  tags:
    - shell-exec
  stage: build
  needs:
    - build_image
  #image: node:20-alpine
  variables:
     CI_REGISTRY: index.docker.io
     CI_REGISTRY_USER: mafshar85
    #CI_REGISTRY_PASSWORD: xxxx
  before_script:
    - echo "Docker registry url is $CI_REGISTRY"
    - echo "Docker registry user is $CI_REGISTRY_USER"
    - echo "Docker image repo is $CI_REGISTRY_IMAGE"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY_IMAGE:v1.0


deploy_image: 
  tags: 
    - shell-exec
  stage: deploy
  script: 
    - echo "deploying in deploy stage ..."
