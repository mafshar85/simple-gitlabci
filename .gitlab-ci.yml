workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

stages:
  - test
  - build
  - deploy

variables:
  CI_REGISTRY: docker.arye.ir
  CI_REGISTRY_IMAGE: nodejs-cicd
  MICRO_SERVICE: njs_app
  IMAGE_NAME: $CI_REGISTRY/$CI_REGISTRY_IMAGE/microservice/$MICRO_SERVICE
  IMAGE_TAG: v1.0


image: node:20-alpine

run_unit_tests:
  tags:
    - kvm
    - docker
  stage: test
  # only:
  #   - master
  except:
    - master
  before_script:
    - cd app
    - npm install
  script:
    - npm test
  artifacts:
    when: always
    paths:
      - app/junit.xml
    reports:
      junit: app/junit.xml
  #allow_failure: "true"  

build_image:
  tags:
    - shell-exec
  stage: build
  #image: node:20-alpine
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .

push_image:
  tags:
    - shell-exec
  stage: build
  needs:
    - build_image
  #image: node:20-alpine
  # variables:
     #CI_REGISTRY_USER: xxxx
     #CI_REGISTRY_PASSWORD: xxxx
  before_script:
    # - echo "Docker registry url is $CI_REGISTRY"
    # - echo "Docker registry user is $CI_REGISTRY_USER"
    # - echo "Docker image repo is $CI_REGISTRY_IMAGE"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    # - docker push $CI_REGISTRY_IMAGE:v1.0
    - docker push $IMAGE_NAME:$IMAGE_TAG 


deploy_to_dev: 
  tags: 
    - shell-exec
  stage: deploy
  variables:
    DEV_SERVER_HOST: 192.168.1.158
    DEV_HOST_PATH: /home/arye/
    DEV_ENDPOINT: 192.168.1.158:3000
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - stat $SSH_PRIVATE_KEY
  script: 
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yml arye@$DEV_SERVER_HOST:$DEV_HOST_PATH
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY arye@$DEV_SERVER_HOST "

         export DC_IMAGE_NAME=$IMAGE_NAME && 
         export DC_IMAGE_TAG=$IMAGE_TAG  &&

         docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
         docker-compose down &&
         docker-compose up -d"
  environment:
    name: deployment
    url: $DEV_ENDPOINT
